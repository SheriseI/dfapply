% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dfapply.R
\docType{data}
\name{n}
\alias{n}
\title{Apply a function that can be applied to a columns of a data frame}
\format{
An object of class \code{integer} of length 1.
}
\usage{
n
}
\arguments{
\item{.data}{should expect a data frame}

\item{.fun}{expect a function that can be applied to a column of a data frame and return a column of a data frame}

\item{.filter}{should expect a function that can be applied to a columns of a data frame and returns a logical (TRUE or FALSE)}
}
\value{
data frame that is a modified version of .data
}
\description{
Apply a function that can be applied to a columns of a data frame
}
\examples{

TestData <-tibble( double = rnorm(n, 100, 10),
  x = 123400 / 10^(1L:n),
  integer = (1L:n) * (1L:n),
  character = LETTERS[1L:n],
  factor = factor(letters[1L:n]),
  logical = rep(c(TRUE, FALSE), length.out = n))
df_apply <- function(.data, .fun, .filter) {modified_columns <-lapply(.data, function(x) {if (.filter(x)){.fun(x)} else {x}}) return(data.frame(modified_columns))}
df_apply(TestData, rfun, rfilter)
}
\keyword{datasets}
